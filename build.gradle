plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.7'
    id 'io.spring.dependency-management' version '1.1.5'

}

group = 'com'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(22)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.2'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.2'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
//    implementation 'com.querydsl:querydsl-jpa:5.1.0'
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
//    annotationProcessor 'com.querydsl:querydsl-apt:5.1.0:jpa'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

def querydslDir = "$buildDir/generated/querydsl"
sourceSets {
    main.java.srcDirs += [ querydslDir ]
}

tasks.withType(JavaCompile) {
    options.annotationProcessorGeneratedSourcesDirectory = file(querydslDir)
}
clean.doLast {
    file(querydslDir).deleteDir()
}

//querydsl {
//    jpa = true
//    querydslSourcesDir = querydslDir
//}

//configurations {
//    querydsl.extendsFrom compileClasspath
//}

//compileQuerydsl {
//    options.annotationProcessorPath = configurations.querydsl
//}

clean {
    delete file(querydslDir)
}

tasks.named('test') {
    useJUnitPlatform()
}